{
  "hash": "8e48f77cf9e52b140a576eb7c385eed1",
  "result": {
    "markdown": "---\ntitle: \"Reporting Tools\"\nauthor: \"Felix Adamaszek\"\n---\n\n::: {.cell hash='Reporting_Tools_cache/html/unnamed-chunk-1_b40a93061077a32b782f582525572b16'}\n\n```{.r .cell-code}\n# INTERACTIVE PLOTS ----\n\n# GOAL: DEVELOP INTERACTIVE PLOTS FOR A SALES REPORT\n\n# LIBRARIES & DATA ----\n\n# Main\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n\n# Visualization\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'plotly'\n#> \n#> The following object is masked from 'package:ggplot2':\n#> \n#>     last_plot\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     filter\n#> \n#> The following object is masked from 'package:graphics':\n#> \n#>     layout\n```\n:::\n\n```{.r .cell-code}\nbikes_tbl      <- readRDS(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bbdp-FelixAdams1827/content/01_journal/bike data/bikes_tbl.rds\")\nbikeshops_tbl  <- readRDS(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bbdp-FelixAdams1827/content/01_journal/bike data/bikeshops_tbl.rds\")\norderlines_tbl <- readRDS(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bbdp-FelixAdams1827/content/01_journal/bike data/orderlines_tbl.rds\")\n\nbike_orderlines_tbl <- orderlines_tbl %>%\n    left_join(bikes_tbl,     by = c(\"product_id\" = \"bike_id\")) %>%\n    left_join(bikeshops_tbl, by = c(\"customer_id\" = \"bikeshop_id\")) %>%\n    \n    # Add the total price\n    mutate(total_price = price_euro * quantity)\n\nformat_to_euro <- function(x, suffix = \" €\") {\n\n  scales::dollar(x,\n                 suffix       = suffix,\n                 prefix       = \"\",\n                 big.mark     = \".\",\n                 decimal.mark = \",\")\n}\n\neuro_format <- function(scale        = 1,\n                        prefix       = \"\",\n                        suffix       = \" €\",\n                        big.mark     = \".\",\n                        decimal.mark = \",\") {\n\n  scales::dollar_format(suffix       = suffix,\n                        prefix       = prefix,\n                        big.mark     = big.mark,\n                        decimal.mark = decimal.mark,\n                        scale        = scale)\n\n}\n```\n:::\n\n::: {.cell hash='Reporting_Tools_cache/html/unnamed-chunk-2_9376ab98bfecc64d858f714741e63c9e'}\n\n```{.r .cell-code}\n# 1.0 TOTAL SALES BY MONTH ----\n\n# 1.1 Preparing Time Series Data ----\n# Monthly\n\ntotal_sales_m_tbl <- bike_orderlines_tbl %>%\n\n  select(order_date, total_price) %>%\n\n  mutate(date_rounded = floor_date(order_date, unit = \"month\")) %>%\n\n  group_by(date_rounded) %>%\n  summarise(total_sales = sum(total_price)) %>%\n  ungroup() %>%\n\n  mutate(label_text = str_glue(\"Sales: {format_to_euro(total_sales)}\n                                 Date: {date_rounded %>% format('%B %Y')}\"))\n\ntotal_sales_m_tbl\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"date_rounded\"],\"name\":[1],\"type\":[\"dttm\"],\"align\":[\"right\"]},{\"label\":[\"total_sales\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"label_text\"],\"name\":[3],\"type\":[\"glue\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2015-01-01\",\"2\":\"392212\",\"3\":\"Sales: 392.212 €\\\\nDate: January 2015\"},{\"1\":\"2015-02-01\",\"2\":\"979099\",\"3\":\"Sales: 979.099 €\\\\nDate: February 2015\"},{\"1\":\"2015-03-01\",\"2\":\"548976\",\"3\":\"Sales: 548.976 €\\\\nDate: March 2015\"},{\"1\":\"2015-04-01\",\"2\":\"1675598\",\"3\":\"Sales: 1.675.598 €\\\\nDate: April 2015\"},{\"1\":\"2015-05-01\",\"2\":\"868838\",\"3\":\"Sales: 868.838 €\\\\nDate: May 2015\"},{\"1\":\"2015-06-01\",\"2\":\"1236049\",\"3\":\"Sales: 1.236.049 €\\\\nDate: June 2015\"},{\"1\":\"2015-07-01\",\"2\":\"996060\",\"3\":\"Sales: 996.060 €\\\\nDate: July 2015\"},{\"1\":\"2015-08-01\",\"2\":\"561418\",\"3\":\"Sales: 561.418 €\\\\nDate: August 2015\"},{\"1\":\"2015-09-01\",\"2\":\"691921\",\"3\":\"Sales: 691.921 €\\\\nDate: September 2015\"},{\"1\":\"2015-10-01\",\"2\":\"659463\",\"3\":\"Sales: 659.463 €\\\\nDate: October 2015\"},{\"1\":\"2015-11-01\",\"2\":\"850430\",\"3\":\"Sales: 850.430 €\\\\nDate: November 2015\"},{\"1\":\"2015-12-01\",\"2\":\"470218\",\"3\":\"Sales: 470.218 €\\\\nDate: December 2015\"},{\"1\":\"2016-01-01\",\"2\":\"606551\",\"3\":\"Sales: 606.551 €\\\\nDate: January 2016\"},{\"1\":\"2016-02-01\",\"2\":\"592871\",\"3\":\"Sales: 592.871 €\\\\nDate: February 2016\"},{\"1\":\"2016-03-01\",\"2\":\"1232284\",\"3\":\"Sales: 1.232.284 €\\\\nDate: March 2016\"},{\"1\":\"2016-04-01\",\"2\":\"1404410\",\"3\":\"Sales: 1.404.410 €\\\\nDate: April 2016\"},{\"1\":\"2016-05-01\",\"2\":\"844861\",\"3\":\"Sales: 844.861 €\\\\nDate: May 2016\"},{\"1\":\"2016-06-01\",\"2\":\"924120\",\"3\":\"Sales: 924.120 €\\\\nDate: June 2016\"},{\"1\":\"2016-07-01\",\"2\":\"1466591\",\"3\":\"Sales: 1.466.591 €\\\\nDate: July 2016\"},{\"1\":\"2016-08-01\",\"2\":\"1138118\",\"3\":\"Sales: 1.138.118 €\\\\nDate: August 2016\"},{\"1\":\"2016-09-01\",\"2\":\"911200\",\"3\":\"Sales: 911.200 €\\\\nDate: September 2016\"},{\"1\":\"2016-10-01\",\"2\":\"508625\",\"3\":\"Sales: 508.625 €\\\\nDate: October 2016\"},{\"1\":\"2016-11-01\",\"2\":\"570180\",\"3\":\"Sales: 570.180 €\\\\nDate: November 2016\"},{\"1\":\"2016-12-01\",\"2\":\"530696\",\"3\":\"Sales: 530.696 €\\\\nDate: December 2016\"},{\"1\":\"2017-01-01\",\"2\":\"838073\",\"3\":\"Sales: 838.073 €\\\\nDate: January 2017\"},{\"1\":\"2017-02-01\",\"2\":\"917521\",\"3\":\"Sales: 917.521 €\\\\nDate: February 2017\"},{\"1\":\"2017-03-01\",\"2\":\"1697590\",\"3\":\"Sales: 1.697.590 €\\\\nDate: March 2017\"},{\"1\":\"2017-04-01\",\"2\":\"1012416\",\"3\":\"Sales: 1.012.416 €\\\\nDate: April 2017\"},{\"1\":\"2017-05-01\",\"2\":\"1848190\",\"3\":\"Sales: 1.848.190 €\\\\nDate: May 2017\"},{\"1\":\"2017-06-01\",\"2\":\"1617491\",\"3\":\"Sales: 1.617.491 €\\\\nDate: June 2017\"},{\"1\":\"2017-07-01\",\"2\":\"1706460\",\"3\":\"Sales: 1.706.460 €\\\\nDate: July 2017\"},{\"1\":\"2017-08-01\",\"2\":\"1363394\",\"3\":\"Sales: 1.363.394 €\\\\nDate: August 2017\"},{\"1\":\"2017-09-01\",\"2\":\"1007288\",\"3\":\"Sales: 1.007.288 €\\\\nDate: September 2017\"},{\"1\":\"2017-10-01\",\"2\":\"977063\",\"3\":\"Sales: 977.063 €\\\\nDate: October 2017\"},{\"1\":\"2017-11-01\",\"2\":\"696876\",\"3\":\"Sales: 696.876 €\\\\nDate: November 2017\"},{\"1\":\"2017-12-01\",\"2\":\"827929\",\"3\":\"Sales: 827.929 €\\\\nDate: December 2017\"},{\"1\":\"2018-01-01\",\"2\":\"875882\",\"3\":\"Sales: 875.882 €\\\\nDate: January 2018\"},{\"1\":\"2018-02-01\",\"2\":\"735354\",\"3\":\"Sales: 735.354 €\\\\nDate: February 2018\"},{\"1\":\"2018-03-01\",\"2\":\"904664\",\"3\":\"Sales: 904.664 €\\\\nDate: March 2018\"},{\"1\":\"2018-04-01\",\"2\":\"1146944\",\"3\":\"Sales: 1.146.944 €\\\\nDate: April 2018\"},{\"1\":\"2018-05-01\",\"2\":\"1499608\",\"3\":\"Sales: 1.499.608 €\\\\nDate: May 2018\"},{\"1\":\"2018-06-01\",\"2\":\"1346596\",\"3\":\"Sales: 1.346.596 €\\\\nDate: June 2018\"},{\"1\":\"2018-07-01\",\"2\":\"1575577\",\"3\":\"Sales: 1.575.577 €\\\\nDate: July 2018\"},{\"1\":\"2018-08-01\",\"2\":\"928248\",\"3\":\"Sales: 928.248 €\\\\nDate: August 2018\"},{\"1\":\"2018-09-01\",\"2\":\"1760560\",\"3\":\"Sales: 1.760.560 €\\\\nDate: September 2018\"},{\"1\":\"2018-10-01\",\"2\":\"762835\",\"3\":\"Sales: 762.835 €\\\\nDate: October 2018\"},{\"1\":\"2018-11-01\",\"2\":\"489677\",\"3\":\"Sales: 489.677 €\\\\nDate: November 2018\"},{\"1\":\"2018-12-01\",\"2\":\"215908\",\"3\":\"Sales: 215.908 €\\\\nDate: December 2018\"},{\"1\":\"2019-01-01\",\"2\":\"856411\",\"3\":\"Sales: 856.411 €\\\\nDate: January 2019\"},{\"1\":\"2019-02-01\",\"2\":\"1196018\",\"3\":\"Sales: 1.196.018 €\\\\nDate: February 2019\"},{\"1\":\"2019-03-01\",\"2\":\"1740798\",\"3\":\"Sales: 1.740.798 €\\\\nDate: March 2019\"},{\"1\":\"2019-04-01\",\"2\":\"2104008\",\"3\":\"Sales: 2.104.008 €\\\\nDate: April 2019\"},{\"1\":\"2019-05-01\",\"2\":\"1901821\",\"3\":\"Sales: 1.901.821 €\\\\nDate: May 2019\"},{\"1\":\"2019-06-01\",\"2\":\"1863254\",\"3\":\"Sales: 1.863.254 €\\\\nDate: June 2019\"},{\"1\":\"2019-07-01\",\"2\":\"958970\",\"3\":\"Sales: 958.970 €\\\\nDate: July 2019\"},{\"1\":\"2019-08-01\",\"2\":\"944077\",\"3\":\"Sales: 944.077 €\\\\nDate: August 2019\"},{\"1\":\"2019-09-01\",\"2\":\"745733\",\"3\":\"Sales: 745.733 €\\\\nDate: September 2019\"},{\"1\":\"2019-10-01\",\"2\":\"873347\",\"3\":\"Sales: 873.347 €\\\\nDate: October 2019\"},{\"1\":\"2019-11-01\",\"2\":\"1100834\",\"3\":\"Sales: 1.100.834 €\\\\nDate: November 2019\"},{\"1\":\"2019-12-01\",\"2\":\"732604\",\"3\":\"Sales: 732.604 €\\\\nDate: December 2019\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='Reporting_Tools_cache/html/unnamed-chunk-3_bc48af8dd3e24392721f459be3d58bec'}\n\n```{.r .cell-code}\n?format \n# Scroll down to Details and go to to date-times (click format.POSIXct)\n# All Abbreviations are listed here as well\n\n\"2011-01-01 00:00:00\" %>% as_datetime() %>% format(\"%B %Y\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"January 2011\"\n```\n:::\n\n```{.r .cell-code}\n## [1] \"January 2011\"\n```\n:::\n\n::: {.cell hash='Reporting_Tools_cache/html/unnamed-chunk-4_31b3db2cc103b5b972507cca3e69edcd'}\n\n```{.r .cell-code}\n# 1.2 Interactive Plot ----\n\n# Step 1: Create ggplot with text feature\n\ng1 <- total_sales_m_tbl %>%\n  ggplot(aes(x = date_rounded, y = total_sales)) +\n\n  # Geoms\n  geom_point() +\n  geom_smooth(method = \"loess\", span = 0.2) +\n\n  # Formatting\n  \n  # Convert scale to euro format\n  scale_y_continuous(labels = euro_format()) +\n  \n  # Make sure 0 will always be shown (even if the data is far away)\n  expand_limits(y = 0) +\n  \n  labs(\n    title = \"Total Sales\",\n    y = \"Revenue (EUR)\",\n    x = \"\"\n  )\n\ng1\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Reporting_Tools_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='Reporting_Tools_cache/html/unnamed-chunk-5_6d21391fa7063aaec1e7dac7320a4c93'}\n\n```{.r .cell-code}\n# 1.3 Plot Total Sales Function ----\n\nplot_total_sales <- function(unit = \"month\", date_format = \"%B %Y\", interactive = TRUE) {\n\n  # Handle Data\n  data_tbl <- bike_orderlines_tbl %>%\n\n    select(order_date, total_price) %>%\n\n    mutate(date_rounded = floor_date(order_date, unit = unit)) %>%\n\n    group_by(date_rounded) %>%\n    summarise(total_sales = sum(total_price)) %>%\n    ungroup() %>%\n\n    mutate(label_text = str_glue(\"Sales: {format_to_euro(total_sales)}\n                                 Date: {date_rounded %>% format(date_format)}\"))\n# Make Plot\n  g1 <- data_tbl %>%\n    ggplot(aes(x = date_rounded, y = total_sales)) +\n\n    # Geoms\n    geom_point(aes(text = label_text), color = \"#2C3E50\") +\n    geom_smooth(method = \"loess\", span = 0.2) +\n\n    # Formatting\n    scale_y_continuous(labels = euro_format()) +\n    expand_limits(y = 0) +\n    labs(\n      title = \"Total Sales\",\n      y = \"Revenue (Euro)\",\n      x = \"\"\n    )\n\n  # Static vs Interactive Logic\n  if (interactive) {\n    return(ggplotly(g1, tooltip = \"text\"))\n  } else {\n    return(g1)\n  }\n\n}\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}